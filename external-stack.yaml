AWSTemplateFormatVersion: "2010-09-09"
Description: Deploy hmmw solution
Outputs:
  FunctionUrl:
    Description: Url to invoke deployed Function
    Value: RequestFunctionUrl.FunctionUrl
Parameters:
  ActionsDynamoDbTableName:
    Default: wkacz-cfn-actions
    Type: String
  StatesDynamoDbTableName:
    Default: wkacz-cfn-states
    Type: String
Resources:
  ActionsDynamoDBTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: Stackname
        AttributeType: S
      - AttributeName: Timestamp
        AttributeType: S
      KeySchema:
      - AttributeName: Stackname
        KeyType: HASH
      - AttributeName: Timestamp
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: ActionsDynamoDbTableName
    Type: AWS::DynamoDB::Table
  RequestFunction:
    Properties:
      Code: ./request_handler_function
      Description: Example
      Environment:
        Variables:
          ActionsDynamoDbTableName: ActionsDynamoDbTableName
      Handler: main.request_handler
      Role: RequestFunctionRole.Arn
      Runtime: python3.9
      Timeout: 300
    Type: AWS::Lambda::Function
  RequestFunctionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - dynamodb:PutItem
            Effect: Allow
            Resource: '*'
          Version: "2012-10-17"
        PolicyName: DynamodbFunctionPolicy
    Type: AWS::IAM::Role
  RequestFunctionUrl:
    Properties:
      AuthType: AWS_IAM
      TargetFunctionArn: RequestFunction
    Type: AWS::Lambda::Url
  RequestUrlFunctionPermissions:
    Properties:
      Action: lambda:InvokeFunctionUrl
      FunctionName: RequestFunction
      FunctionUrlAuthType: AWS_IAM
      Principal: '*'
    Type: AWS::Lambda::Permission
  StatesDynamoDBTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: Stackname
        AttributeType: S
      KeySchema:
      - AttributeName: Stackname
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: StatesDynamoDbTableName
    Type: AWS::DynamoDB::Table
  StreamFunction:
    Properties:
      Code: ./stack_creator_function
      Description: Example
      Environment:
        Variables:
          ActionsDynamoDbTableName: ActionsDynamoDbTableName
          StatesDynamoDbTableName: StatesDynamoDbTableName
      Handler: main.stream_handler
      Role: StreamFunctionRole.Arn
      Runtime: python3.9
      Timeout: 300
    Type: AWS::Lambda::Function
  StreamFunctionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - iam:CreateInstanceProfile
            - iam:DeleteInstanceProfile
            - iam:GetRole
            - iam:AddRoleToInstanceProfile
            - iam:RemoveRoleFromInstanceProfile
            - iam:CreateRole
            - iam:DeleteRole
            - iam:PutRolePolicy
            - iam:PassRole
            - iam:GetRolePolicy
            - iam:DeleteRolePolicy
            Effect: Allow
            Resource: '*'
          Version: "2012-10-17"
        PolicyName: IAMFunctionPolicy
      - PolicyDocument:
          Statement:
          - Action:
            - ssm:PutParameter
            - ssm:DeleteParameter
            Effect: Allow
            Resource: '*'
          Version: "2012-10-17"
        PolicyName: SSMFunctionPolicy
      - PolicyDocument:
          Statement:
          - Action:
            - ec2:AuthorizeSecurityGroupIngress
            - ec2:TerminateInstances
            - ec2:CreateTags
            - ec2:RunInstances
            - ec2:CreateSecurityGroup
            - ec2:CreateSnapshots
            - ec2:DeleteSecurityGroup
            - ec2:DescribeSecurityGroups
            - ec2:DescribeKeyPairs
            - ec2:DescribeInstances
            - ec2:CreateKeyPair
            - ec2:DeleteKeyPair
            - ec2:CreateSubnet
            - ec2:AssociateSubnetCidrBlock
            - ec2:DescribeSubnets
            - ec2:CreateSubnet
            - ec2:DeleteSubnet
            - ec2:CreateNetworkAcl
            - ec2:DeleteNetworkAcl
            - ec2:DescribeNetworkAcls
            - ec2:ReplaceNetworkAclAssociation
            - ec2:CreateNetworkAclEntry
            - ec2:DeleteNetworkAclEntry
            Effect: Allow
            Resource: '*'
          Version: "2012-10-17"
        PolicyName: EC2FunctionPolicy
      - PolicyDocument:
          Statement:
          - Action:
            - cloudformation:CreateStack
            - cloudformation:DescribeStacks
            - cloudformation:ListStacks
            - cloudformation:DeleteStack
            Effect: Allow
            Resource: '*'
          Version: "2012-10-17"
        PolicyName: CFNFunctionPolicy
      - PolicyDocument:
          Statement:
          - Action:
            - s3:CreateBucket
            - s3:DeleteBucket
            - s3:GetObject
            - s3:ListBucket
            Effect: Allow
            Resource: '*'
          Version: "2012-10-17"
        PolicyName: S3FunctionPolicy
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: arn:aws:logs:*:*:*
          - Action:
            - dynamodb:DescribeStream
            - dynamodb:GetRecords
            - dynamodb:GetShardIterator
            - dynamodb:ListStreams
            - dynamodb:PutItem
            - dynamodb:GetItem
            Effect: Allow
            Resource: '*'
          Version: "2012-10-17"
        PolicyName: StreamFunctionPolicy
    Type: AWS::IAM::Role
  TableStreamFunctionMapping:
    Properties:
      BatchSize: 1
      Enabled: true
      EventSourceArn: ActionsDynamoDBTable.StreamArn
      FunctionName: StreamFunction.Arn
      StartingPosition: LATEST
    Type: AWS::Lambda::EventSourceMapping
